[metrics]
# Exposes Prometheus metrics
go_process = true

# API server
[api]
# Host and port
address = ":8080"

# Geth API endpoints
[chain]
graphql_endpoint = "https://rpc.celo.grassecon.net/graphql"
ws_endpoint      = "wss://ws.celo.grassecon.net"

# Syncer configs
[syncer]
# Maximum number of missing blocks pushed into the worker queue every janitor sweep
batch_size          = 200
# Number of goroutines assigned to the worker pool
concurrency         = 3
# Prevents reprocessing head block already in queue
head_block_lag      = 5
# Max idle time after which goroutine is returned back to the pool
idle_worker_timeout = 1
# Syncer start block
initial_lower_bound = 17204504
# Max blocks in worker queue awaiting processing
queue_size          = 500
# Janitor sweep interval, should take into account concurrency and queue_size
sweep_interval      = 10

[postgres]
dsn   = "postgres://postgres:postgres@localhost:5432/cic_chain_events"

# https://docs.nats.io/
[jetstream]
endpoint               = "nats://localhost:4222"
stream_name            = "CHAIN"
# Duration JetStream should keep the message before GC
persist_duration_hours = 48
# Duration to ignore duplicate transactions (e.g. due to restart)
dedup_duration_hours   = 6
# Stream subjects
stream_subjects        = [
    "CHAIN.transfer",
    "CHAIN.transferFrom",
    "CHAIN.mintTo"
]